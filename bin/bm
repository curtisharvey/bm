#!/usr/bin/env bash

# version
VERSION="0.4.1"

# bookmarks dir
DIR="${BM_DIR:-$HOME/Dropbox/bookmarks}"

# thumbs cache
THUMBS="$DIR/thumbs"

# bookmarks file
BOOKMARKS="$DIR/data"

# Output usage info
usage () {
  cat <<EOF

  Usage: bm [options] [cmd]

  Commands:

    # add a bookmark with the given url, description, and optional tags
    $ bm add <url> [desc] [tag...]

    # open bookmarks matching <query>
    $ bm open <query>
    $ bm <query>

    # search the bookmarks via full-text <query>
    $ bm search <query>

    # list bookmarks available
    $ bm list
    $ bm ls
    $ bm

    # view bookmark screenshots in your default browser
    $ bm view design
    $ bm view

    # clear all bookmarks
    $ bm clear

  Options:

     -V, --version   output bm version
     -h, --help      output this help information

  Config:
    By default bookmark data is stored in ~/Dropbox/bookmarks. You can change
    this by setting a BM_DIR environment variable.

EOF
}

# Simple confirmation helper
ask () {
  read -p "$*? [y/n]: " < /dev/tty
  [[ "$REPLY" =~ ^[yY]$ ]]
}

# Generate bookmark thumbnail
create_thumb () {
  # test for webkit2png
  if ! type -t webkit2png > /dev/null; then
    echo -e "NOTE: webkit2png is needed to create thumbnails. Try:\n$ brew install webkit2png" > /dev/stderr
    return 1
  fi

  # fetch thumb
  local url="$1" hash="$(echo "$url" | md5)" temp="$(mktemp -d)"
  if ! test -f "$THUMBS/$hash.png"; then
    webkit2png -C -o "$temp/$hash" "$url" > /dev/null && mv "$temp/$hash-clipped.png" "$THUMBS/$hash.png"
  fi

  # cleanup
  rm -r "$temp"
}

# Add a bookmark
save_bookmark () {
  local url="$1" desc="$2" tags="${@:3}"
  echo
  echo "Added bookmark"
  echo "  url: $url"
  echo "  description: $desc"
  echo "  tags: $tags"
  echo
  echo "$url|$desc|$tags" >> "$BOOKMARKS"
  # fetch thumbnail as background task
  create_thumb "$url" &
}

# Filter bookmarks by keyword
filter_bookmarks () {
  cat "$BOOKMARKS" | grep "${1:-.}"
}

# Search/List bookmarks matching query
search_bookmarks () {
  filter_bookmarks "$*" | while IFS='|' read -ra b; do
    echo -e "  \033[36m${b[0]#http*:\/\/}\033[0m"
    echo -e "  \033[33m${b[1]}\033[0m"
    echo -e "  \033[90m${b[2]}\033[0m\n"
  done
}

# Open all bookmarks matching query
open_bookmarks () {
  local urls="$(filter_bookmarks "$*" | cut -d '|' -f 1)"
  local n=$(echo "$urls" | wc -l);
  if [ $n -eq 1 ] || echo -e "$n bookmarks found:\n\n$urls\n\n" && ask "Open all"; then
    echo "$urls" | xargs open
  fi
}

# View bookmarks in browser
view_bookmarks () {
  local html="$DIR/bm.html"
  cat > "$html" <<EOF
<!doctype html>
<title>Bookmarks</title>
<style>
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
body {
  padding: 50px 0 5px 50px;
  background: #1f1f1f url(http://subtlepatterns.com/patterns/black-Linen.png);
  font: 12px "Helvetica Neue", Helvetica, Arial, sans-serif;
}
.bm {
  position: relative;
  float: left;
  margin: 15px;
  padding: 1px;
  opacity: 1;
  border: 15px solid black;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  -webkit-transition: -webkit-box-shadow 600ms;
  -moz-transition: -webkit-box-shadow 600ms;
  -webkit-box-shadow: 0 0 1px 0 #555, 0 0 10px rgba(0,0,0,.5);
  -moz-box-shadow: 0 0 1px 0 #555, 0 0 10px rgba(0,0,0,.5);
  overflow: hidden;
}
.bm:hover {
  -webkit-box-shadow: 0 0 40px #1ab0ff
    , 0 0 3px #06bdff
    , 0 1px 1px #4ee2ff
    , 0 1px 0 #fff;
  -moz-box-shadow: 0 0 40px #1ab0ff
    , 0 0 3px #06bdff
    , 0 1px 1px #4ee2ff
    , 0 1px 0 #fff;
}
.bm:hover img {
  opacity: 1;
}
.bm img {
  width: 200px;
  height: 150px;
  opacity: .5;
  -webkit-transition: opacity 200ms;
  -moz-transition: opacity 200ms;
}
.bm p {
  margin: 0;
  padding: 10px;
  width: 100%;
  background: rgba(0,0,0,.75);
  position: absolute;
  left: 0;
  color: white;
  letter-spacing: 1px;
  bottom: -50px;
  -webkit-font-smoothing: antialiased;
  -webkit-transition: bottom 200ms ease-in;
}
.bm:hover p {
  bottom: 0;
}
</style>
EOF
  # append bookmark thumbs
  filter_bookmarks "$*" | while IFS='|' read -ra b; do
    local url="${b[0]}" desc="${b[1]}" tags="${b[2]}"
    local path="$THUMBS/$(echo $url | md5).png"
    [ ! -f "$path" ] && create_thumb "$url"
    echo "
    <div class='bm'>
        <a href='$url'><img src='$path' alt='$desc'></a>
        <p>$desc</p>
    </div>
    "
  done >> "$html"
  # open in browser
  open "$html"
}

# Remove all bookmarks
clear_bookmarks () {
  ask 'Are you sure you want to clear all bookmarks data' && rm -rv "$DIR"
}

# make sure paths exist
mkdir -p "$THUMBS"
touch "$BOOKMARKS"

# parse args and execute
if test $# -eq 0; then
  search_bookmarks '.'
else
  case "$1" in
    -h|--help) usage ;;
    -V|--version) echo "$VERSION" ;;
    add) shift; save_bookmark "$@" ;;
    clear) clear_bookmarks ;;
    ls|list|search) shift; search_bookmarks "$*" ;;
    open) shift; open_bookmarks "$*" ;;
    view) shift; view_bookmarks "$*" ;;
    *) open_bookmarks "$*" ;;
  esac
fi
